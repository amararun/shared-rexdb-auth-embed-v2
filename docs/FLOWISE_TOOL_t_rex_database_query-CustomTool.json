{
  "name": "t_rex_database_query",
  "description": "Use this tool to connect to database . The user will provide host, database, username, password, and port as separate details or a URI (extract if needed). Use default ports (5432 for PostgreSQL, 3306 for MySQL) if unspecified. Use the database connection details shared by the user for all tool calls.\n\nIMPORTANT\n1. Convert user questions into SQL queries (Postgres or MySQL compliant as per database type specified by user) and pass them as parameters in API calls. \n2. Ensure NO SCHEMA USED for MySQL queries as MySQL database does not have schemas. FOR MYSQL QUERIES DO NOT USE 'PUBLIC' OR ANY SCHEMA NAME. Queries to be MySQL compliant.\n3. PostgreSQL has schemas. So postgres queries to always include schemas (use 'public' if unspecified). \n\nFor errors, always share the query and connection details for debugging. Allow up to 180 seconds for query responses due to possible server delays. Always execute the query and share actual results, not fabricated data.",
  "color": "linear-gradient(rgb(155,44,185), rgb(192,122,175))",
  "iconSrc": "",
  "schema": "[{\"id\":0,\"property\":\"sqlquery\",\"description\":\"MySQL or PostGres SQL query string based on user question. Note database type (MySQL or Postgres) shared by user. Convert user questions into Postgres compliant SQL query if database type is postgresql and into MySQL compliant query if database type is MySQL. Ensure NO SCHEMA USED for MySQL queries as MySQL database does not have schemas. FOR MYSQL QUERIES DO NOT USE 'PUBLIC' OR ANY SCHEMA NAME. Queries to be MySQL compliant. PostgreSQL always HAS schemas. So for postgres queries ALWAYS INCLUDE SCHEMA (use 'public' if unspecified). NOTE THIS DIFFERENCE PLEASE.\",\"type\":\"string\",\"required\":true},{\"id\":1,\"property\":\"cloudVar\",\"description\":\"this would always be 'userDefined'\",\"type\":\"string\",\"required\":true},{\"id\":2,\"property\":\"host\",\"description\":\"host for the database connection\",\"type\":\"string\",\"required\":true},{\"id\":3,\"property\":\"database\",\"description\":\"database name for the connection\",\"type\":\"string\",\"required\":true},{\"id\":4,\"property\":\"user\",\"description\":\"user name for the connection \",\"type\":\"string\",\"required\":true},{\"id\":5,\"property\":\"port\",\"description\":\"specified by user else use default port for the type of warehouse 5432 for postgres and 3306 for mysql\",\"type\":\"number\",\"required\":false},{\"id\":6,\"property\":\"db_type\",\"description\":\"either 'postgresql' or 'mysql' would be provided by user\",\"type\":\"string\",\"required\":true},{\"id\":7,\"property\":\"password\",\"description\":\"password for the database connection\",\"type\":\"string\",\"required\":false}]",
  "func": "const fetch = require('node-fetch');\n\n// Properly encode the query parameters\nconst hostVar = encodeURIComponent($host);\nconst databaseVar = encodeURIComponent($database);\nconst userVar = encodeURIComponent($user);\nconst passwordVar = encodeURIComponent($password);\nconst sqlQuery = encodeURIComponent($sqlquery);\nconst portVar = encodeURIComponent($port);\nconst dbTypeVar = encodeURIComponent($db_type);\n\nconst url = `https://rexdb.hosting.tigzig.com/connect-db/?host=${hostVar}&database=${databaseVar}&user=${userVar}&password=${passwordVar}&sqlquery=${sqlQuery}&port=${portVar}&db_type=${dbTypeVar}`;\n\nconst options = {\n    method: 'GET',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n};\n\ntry {\n    const response = await fetch(url, options);\n    const text = await response.text();\n    return text;\n} catch (error) {\n    console.error(error);\n    return '';\n}\n"
}